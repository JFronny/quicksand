plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id "com.modrinth.minotaur" version "${minotaur_version}"
	id 'net.darkhax.curseforgegradle' version "${cfgradle_version}"
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.mod_name
version = project.mod_version + "+" + project.version_meta
group = project.maven_group

loom {
	runs {
		datagenClient {
			client()
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"

			ideConfigGenerated = true
			runDir "build/datagen"
			source sourceSets.main
		}
	}
}

sourceSets {
	main {
		resources {
			srcDir "src/generated/resources"
		}
	}
}

repositories {
	maven { url "https://maven.terraformersmc.com/"}
	maven { url "https://maven.shedaniel.me/" }
}

dependencies {
	// Minecraft
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

    // Yarn
    mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}:v${project.tiny_version}"

    // Fabric Loader
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fapi_version}"
	
	// CauldronLib
	modImplementation "com.shnupbups:CauldronLib:${project.cauldronlib_version}"
	include "com.shnupbups:CauldronLib:${project.cauldronlib_version}"
	
	// ModMenu
    modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
	
	// RoughlyEnoughItems
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

	// Architectury Fabric
	modRuntimeOnly "dev.architectury:architectury-fabric:${project.arch_version}"
}

java {
	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	it.options.release = 21
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
	manifest {
        attributes([
                "Specification-Title"     : "${mod_name}",
                "Specification-Vendor"    : "${maven_group}",
                "Specification-Version"   : "${mod_version}",
                "Implementation-Title"    : "${mod_name}",
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Vendor"   : "${maven_group}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "${mod_name}.mixins.json"
        ])
    }
}

modrinth {
	projectId = project.modrinth_project
	uploadFile = remapJar
	versionName = "${project.mod_version} for Minecraft ${project.minecraft_version}"
	gameVersions = ["${project.minecraft_version}"]
	dependencies {
		required.project "fabric-api"
	}
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    apiToken = findProperty('CF_TOKEN')

    def mainFile = upload(project.cf_project, remapJar)
	mainFile.displayName = "${project.mod_version} for Minecraft ${project.minecraft_version}"
	mainFile.addModLoader("Fabric")
	mainFile.addGameVersion("${project.minecraft_version}")
	mainFile.addRequirement("fabric-api")
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		mavenLocal()
	}
}
